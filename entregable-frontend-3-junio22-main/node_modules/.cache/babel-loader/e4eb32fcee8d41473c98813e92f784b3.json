{"ast":null,"code":"import _slicedToArray from \"/Users/dalmalazarte/Desktop/entregable-frontend-3-junio22-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/dalmalazarte/Desktop/entregable-frontend-3-junio22-main/src/components/Item.js\";\n// El componente Item no tiene componentes hijos.\n// ESTADO: Item debe tener un número para almacenar la cantidad de stock, la misma se la defina el padre a la hora de crearlo.\n// MÉTODOS: Item debe manejar el click de su boton para restar la cantidad en stock de sí mismo y a su vez poder aumentar el estado de su \"abuelo\" App.\n// PROPS: Item recibe todos los campos que muestra en pantalla: nombre, descripcion, stock y el métodos heredados para su uso.\n// Maqueta de Item:\n//    h3\n//    p\n//    h5 > span    (este span debe mostrar la cantidad si es mayor a 0 \"agotado\" si llega a 0)\n//    button       (este boton debe permitir comprar, pero si la cantidad es menor a 0 debe estar deshabilitado y decir \"Sin stock\")\nimport React, { useState } from 'react';\nexport default function Item(props) {\n  var _useState = useState(props.stock),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var stockActu = \"\";\n\n  if (!value > 0) {\n    stockActu = /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }\n    }, \"Sold Out\");\n  } else {\n    stockActu = value.toString();\n  }\n\n  var comprar = function comprar() {\n    if (value > 0) {\n      setValue(value - 1);\n      props.sumar();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"producto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, props.nombre), /*#__PURE__*/React.createElement(\"img\", {\n    src: props.imagen,\n    alt: \"puma\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, props.descripcion), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \"En stock: \", stockActu), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: comprar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"Comprar\"));\n}","map":{"version":3,"names":["React","useState","Item","props","stock","value","setValue","stockActu","toString","comprar","sumar","nombre","imagen","descripcion"],"sources":["/Users/dalmalazarte/Desktop/entregable-frontend-3-junio22-main/src/components/Item.js"],"sourcesContent":["\r\n// El componente Item no tiene componentes hijos.\r\n// ESTADO: Item debe tener un número para almacenar la cantidad de stock, la misma se la defina el padre a la hora de crearlo.\r\n// MÉTODOS: Item debe manejar el click de su boton para restar la cantidad en stock de sí mismo y a su vez poder aumentar el estado de su \"abuelo\" App.\r\n// PROPS: Item recibe todos los campos que muestra en pantalla: nombre, descripcion, stock y el métodos heredados para su uso.\r\n// Maqueta de Item:\r\n//    h3\r\n//    p\r\n//    h5 > span    (este span debe mostrar la cantidad si es mayor a 0 \"agotado\" si llega a 0)\r\n//    button       (este boton debe permitir comprar, pero si la cantidad es menor a 0 debe estar deshabilitado y decir \"Sin stock\")\r\n\r\nimport React,{useState} from 'react'\r\n\r\nexport default function Item(props) {\r\n   \r\n  const [value, setValue] = useState(props.stock)\r\n  let stockActu=\"\"\r\n\r\n  if (!value>0){\r\n  stockActu=<span>{`${\"Sold Out\"}`}</span>\r\n  }else{\r\n  stockActu=value.toString();\r\n  }\r\n  \r\n  const comprar = () => {\r\n    if (value>0){\r\n    setValue(value - 1)\r\n    props.sumar()\r\n    }\r\n  }\r\n   \r\n  return (\r\n    <div className='producto'>\r\n      <h3>{props.nombre}</h3>\r\n      <img src={props.imagen} alt= 'puma'></img>\r\n      <p>{props.descripcion}</p>\r\n      <h5>En stock: {stockActu}</h5>\r\n      <button onClick={comprar}>Comprar</button>\r\n    </div>\r\n  )\r\n}"],"mappings":";;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;EAAA,gBAERF,QAAQ,CAACE,KAAK,CAACC,KAAP,CAFA;EAAA;EAAA,IAE3BC,KAF2B;EAAA,IAEpBC,QAFoB;;EAGlC,IAAIC,SAAS,GAAC,EAAd;;EAEA,IAAI,CAACF,KAAD,GAAO,CAAX,EAAa;IACbE,SAAS,gBAAC;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAU,UAAV,CAAV;EACC,CAFD,MAEK;IACLA,SAAS,GAACF,KAAK,CAACG,QAAN,EAAV;EACC;;EAED,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;IACpB,IAAIJ,KAAK,GAAC,CAAV,EAAY;MACZC,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;MACAF,KAAK,CAACO,KAAN;IACC;EACF,CALD;;EAOA,oBACE;IAAK,SAAS,EAAC,UAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAKP,KAAK,CAACQ,MAAX,CADF,eAEE;IAAK,GAAG,EAAER,KAAK,CAACS,MAAhB;IAAwB,GAAG,EAAE,MAA7B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFF,eAGE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAIT,KAAK,CAACU,WAAV,CAHF,eAIE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,iBAAeN,SAAf,CAJF,eAKE;IAAQ,OAAO,EAAEE,OAAjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,aALF,CADF;AASD"},"metadata":{},"sourceType":"module"}